@page "/students/student/{Id}"
@rendermode InteractiveServer

@using ARIS.Shared.Responses

@inject ARISApiClient _apiClient
@inject IDialogService _dialogService

<PageTitle>Student</PageTitle>

<FluentStack Orientation="Orientation.Horizontal">
    <FluentCard Style="padding: 8px 8px;border-color:coral">
        Overview
    </FluentCard>
    <FluentCard Style="padding: 8px 8px;border-color:greenyellow;">
        Academic Results
    </FluentCard>
    <FluentCard Style="padding: 8px 8px;border-color:brown">
        Discipline
    </FluentCard>
    <FluentCard Style="padding: 8px 8px;border-color:gold;">
        Health
    </FluentCard>
</FluentStack>

<br />

<FluentGrid>
    <FluentGridItem xs="4" Style="display:flex;justify-content:center">
        <div style="height:250px;background-color:rebeccapurple;width:200px;border-radius:10px;">
        </div>
    </FluentGridItem>
    <FluentGridItem xs="8">
        <FluentCard Style="padding: 8px 8px;" AreaRestricted="false" Height="250px">
            <div style="display:grid;grid-template-columns: .33fr 1fr;">
                <FluentLabel Style="font-family:Bahnschrift;font-size:20px;color:dodgerblue;">Name:</FluentLabel>
                <FluentLabel Style="font-family:Bahnschrift;font-size:20px">@data.FirstName @data.MiddleName @data.LastName</FluentLabel>
            </div>
            <br />
            @{
                var today = DateTime.Today;
                var age = today.Year - data.BirthDate.Year;
                if (data.BirthDate.Date > today.AddYears(-age)) age--;
            }
            <div style="display:grid;grid-template-columns: 1fr 1fr 1fr 1fr;">
                <FluentLabel Style="font-family:Bahnschrift;display:inline-block;font-size:18px;color:dodgerblue;">Gender:</FluentLabel>
                <FluentLabel Style="font-family:Bahnschrift;display:inline-block;font-size:18px">@data.Gender</FluentLabel>
                <FluentLabel Style="font-family:Bahnschrift;display:inline-block;font-size:18px;color:dodgerblue;"> Age:</FluentLabel>
                <FluentLabel Style="font-family:Bahnschrift;display:inline-block;font-size:18px;">@age years old</FluentLabel>
            </div>
            <br />
            @if (data.Form != null)
            {
                <div style="display:grid;grid-template-columns: 1fr 1fr 1fr 1fr;">
                    <FluentLabel Style="font-family:Bahnschrift;display:inline-block;font-size:18px;color:dodgerblue;">Class:</FluentLabel>
                    <FluentLabel Style="font-family:Bahnschrift;display:inline-block;font-size:18px">Form @data?.Form?.Id</FluentLabel>
                    <FluentLabel Style="font-family:Bahnschrift;display:inline-block;font-size:18px;color:dodgerblue;">Stream:</FluentLabel>
                    <FluentLabel Style="font-family:Bahnschrift;display:inline-block;font-size:18px;">@data?.Form?.Stream</FluentLabel>
                </div>
            }
            else
            {
                <FluentButton @onclick="@OpenDialogAsync" Appearance="Appearance.Accent">
                    Open Dialog
                </FluentButton>
            }
            <hr />
            <FluentLabel Style="font-family:Bahnschrift">Actions</FluentLabel>
            <FluentMenuButton @ref=menubutton Text="Select brand color" Items="@items" Style="z-index:10000;"></FluentMenuButton>
        </FluentCard>
    </FluentGridItem>
    <FluentGridItem xs="4">
        <FluentCard Style="padding: 8px 8px;">
            <p style="font-family:Bahnschrift">Father's Information</p>
            <FluentTextField Label="Father's Name" Appearance="FluentInputAppearance.Outline" Value="@data?.Father?.Name" ReadOnly="true" Style="width:100%;font-family:Bahnschrift" />
            <br />
            <br />
            <FluentTextField Label="Father's Phone Number" ReadOnly="true" Value="@data?.Father?.PhoneNumber" Style="width:100%;font-family:Bahnschrift" />
        </FluentCard>
    </FluentGridItem>
    <FluentGridItem xs="4">
        <FluentCard Style="padding: 8px 8px;">
            <p style="font-family:Bahnschrift">Mother's Information</p>
            <FluentTextField Label="Mother's Name" Value="@data?.Mother?.Name" ReadOnly="true" Style="width:100%;font-family:Bahnschrift" />
            <br />
            <br />
            <FluentTextField Label="Mother's Phone Number" Value="@data?.Mother?.PhoneNumber" ReadOnly="true" Style="width:100%;font-family:Bahnschrift" />
        </FluentCard>
    </FluentGridItem>
    <FluentGridItem xs="4">
        <FluentCard Style="padding: 8px 8px;">
            <p style="font-family:Bahnschrift">Guardian's Information</p>
            <FluentTextField Label="Guardian's Name" Value="@data?.Guardian?.Name" ReadOnly="true" Style="width:100%;font-family:Bahnschrift" />
            <br />
            <br />
            <FluentTextField Label="Guardian's Phone Number" Value="@data?.Guardian?.PhoneNumber" ReadOnly="true" Style="width:100%;font-family:Bahnschrift" />
        </FluentCard>
    </FluentGridItem>
</FluentGrid>


@code {

    [Parameter]
    public string Id { get; set; } = string.Empty;

    StudentAdvancedData data = new StudentAdvancedData();

    public int GetIdAsInt()
    {
        return int.TryParse(Id, out int id) ? id : -1;
    }

    protected override async Task OnParametersSetAsync()
    {
        data = await _apiClient.GetStudentAdvancedData(GetIdAsInt());
    }

    private async Task OpenDialogAsync()
    {
        DialogParameters parameters = new()
            {
                Title = "Assign Student to Form",
                Width = "800px",
                TrapFocus = false,
                Modal = true,
                PreventScroll = true
            };
        IDialogReference dialog = await _dialogService.ShowDialogAsync<AssignForm>(data,parameters);
    }

    private FluentMenuButton menubutton = new();

    private Dictionary<string, string> items = new Dictionary<string, string>()
    {
        {"0078D4","Windows"},
        {"D83B01","Office"},
        {"464EB8","Teams"},
        {"107C10","Xbox"},
        {"8661C5","Visual Studio"},
        {"F2C811","Power BI"},
        {"0066FF","Power Automate"},
        {"742774","Power Apps"},
        {"0B556A","Power Virtual Agents"}
    };


}
