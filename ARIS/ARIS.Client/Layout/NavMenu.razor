@rendermode InteractiveAuto

@implements IDisposable

@inject NavigationManager NavigationManager

<div class="navmenu">
    <input type="checkbox" title="Menu expand/collapse toggle" id="navmenu-toggle" class="navmenu-icon" />
    <label for="navmenu-toggle" class="navmenu-icon"><FluentIcon Value="@(new Icons.Regular.Size20.Navigation())" Color="Color.Fill" /></label>
    <nav class="sitenav" aria-labelledby="main-menu" onclick="document.getElementById('navmenu-toggle').click();">
        <FluentNavMenu Style="font-family:Bahnschrift" Id="main-menu" Width="250" Collapsible="true" Title="Navigation menu" @bind-Expanded="expanded">
            <FluentNavLink Href="/" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size20.Home())" IconColor="Color.Accent">Home</FluentNavLink>
            <FluentNavGroup Icon="@(new Icons.Regular.Size20.CircleMultipleSubtractCheckmark())" Title="Actions">
                <FluentNavLink Href="students/student-search" Icon="@(new Icons.Regular.Size20.PeopleSearch())" IconColor="Color.Accent">Student Search</FluentNavLink>
                <FluentNavLink Href="students/student-registration" Icon="@(new Icons.Regular.Size20.PeopleAdd())" IconColor="Color.Accent">Student Registration</FluentNavLink>
                
            </FluentNavGroup>
            <FluentNavGroup Title="Jobs" Icon="@(new Icons.Regular.Size20.TextWordCount())">
                <FluentNavLink Href="jobs/bulk-registration" Icon="@(new Icons.Regular.Size20.BriefcaseSearch())" IconColor="Color.Accent">Bulk Registration</FluentNavLink>
            </FluentNavGroup>
            <FluentNavLink Href="academics" Icon="@(new Icons.Regular.Size20.BookPulse())" IconColor="Color.Accent">Academics</FluentNavLink>
            <FluentNavLink Href="students" Icon="@(new Icons.Regular.Size20.PeopleCommunity())" IconColor="Color.Accent">Students</FluentNavLink>
            <FluentNavLink Href="repository" Icon="@(new Icons.Regular.Size20.DocumentDatabase())" IconColor="Color.Accent">Repository</FluentNavLink>
            <FluentNavLink Href="auth" Icon="@(new Icons.Regular.Size20.LockClosedKey())" IconColor="Color.Accent">Auth Required</FluentNavLink>
            <AuthorizeView>
                <Authorized>
                    <FluentNavLink Href="Account/Manage">@context.User.Identity?.Name</FluentNavLink>
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <FluentButton Type="ButtonType.Submit" Style="width: 100%;">Logout</FluentButton>
                    </form>
                </Authorized>
                <NotAuthorized>
                    <FluentNavLink Href="Account/Register">Register</FluentNavLink>
                    <FluentNavLink Href="Account/Login">Login</FluentNavLink>
                </NotAuthorized>
            </AuthorizeView>
        </FluentNavMenu>
    </nav>
</div>

@code {
    private bool expanded = true;

    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}